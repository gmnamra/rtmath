###############################################################################
# Find Qhull
#
# This sets the following variables:
# QHULL_FOUND - True if QHULL was found.
# QHULL_INCLUDE_DIRS - Directories containing the QHULL include files.
# QHULL_LIBRARIES - Libraries needed to use QHULL.
# QHULL_DEFINITIONS - Compiler flags for QHULL.

find_file(QHULL_HEADER
          NAMES libqhull/libqhull.h
          HINTS "$ENV{QHULL_ROOT}" "${QHULL_ROOT}" # "${QHULL_INCLUDE_DIR}"
          PATH_SUFFIXES qhull src/libqhull libqhull include)

if(QHULL_HEADER)
    get_filename_component(QHULL_INCLUDE_DIR ${QHULL_HEADER} PATH)
    get_filename_component(QHULL_INCLUDE_DIR ${QHULL_INCLUDE_DIR} PATH)
else(QHULL_HEADER)
  set(QHULL_INCLUDE_DIR "QHULL_INCLUDE_DIR-NOTFOUND")
endif(QHULL_HEADER)

set(QHULL_INCLUDE_DIR "${QHULL_INCLUDE_DIR}" CACHE PATH "QHull include dir." FORCE)

set(QHULL_CPP_RELEASE_NAME qhullcpp)
set(QHULL_CPP_DEBUG_NAME qhullcpp_d)
set(QHULL_STATIC_RELEASE_NAME qhullstatic)
set(QHULL_STATIC_DEBUG_NAME qhullstatic_d)
set(QHULL_RELEASE_NAME qhull)
set(QHULL_DEBUG_NAME qhull_d)
set(QHULL_P_RELEASE_NAME qhull_p)
set(QHULL_P_DEBUG_NAME qhull_pd)
set(QHULL_REENT_RELEASE_NAME qhull_r)
set(QHULL_REENT_DEBUG_NAME qhull_rd)

find_library(QHULL_LIBRARY 
             NAMES ${QHULL_RELEASE_NAME}
             HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
             PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
             PATH_SUFFIXES project build bin lib)

find_library(QHULL_LIBRARY_DEBUG 
             NAMES ${QHULL_DEBUG_NAME} ${QHULL_RELEASE_NAME}
             HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
             PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
             PATH_SUFFIXES project build bin lib)

if(NOT QHULL_LIBRARY_DEBUG)
  set(QHULL_LIBRARY_DEBUG ${QHULL_LIBRARY})
endif(NOT QHULL_LIBRARY_DEBUG)

find_library(QHULL_P_LIBRARY 
             NAMES ${QHULL_P_RELEASE_NAME}
             HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
             PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
             PATH_SUFFIXES project build bin lib)

find_library(QHULL_P_LIBRARY_DEBUG 
             NAMES ${QHULL_P_DEBUG_NAME} ${QHULL_P_RELEASE_NAME}
             HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
             PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
             PATH_SUFFIXES project build bin lib)

if(NOT QHULL_P_LIBRARY_DEBUG)
  set(QHULL_P_LIBRARY_DEBUG ${QHULL_P_LIBRARY})
endif(NOT QHULL_P_LIBRARY_DEBUG)

find_library(QHULL_REENT_LIBRARY 
	NAMES ${QHULL_REENT_RELEASE_NAME}
	 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
	 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
	 PATH_SUFFIXES project build bin lib)

find_library(QHULL_REENT_LIBRARY_DEBUG 
 NAMES ${QHULL_REENT_DEBUG_NAME} ${QHULL_REENT_RELEASE_NAME}
 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
 PATH_SUFFIXES project build bin lib)

if(NOT QHULL_REENT_LIBRARY_DEBUG)
 set(QHULL_REENT_LIBRARY_DEBUG ${QHULL_REENT_LIBRARY})
endif(NOT QHULL_REENT_LIBRARY_DEBUG)

find_library(QHULL_STATIC_LIBRARY 
	NAMES ${QHULL_STATIC_RELEASE_NAME}
	 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
	 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
	 PATH_SUFFIXES project build bin lib)

 find_library(QHULL_STATIC_LIBRARY_DEBUG 
	 NAMES ${QHULL_STATIC_DEBUG_NAME} ${QHULL_STATIC_RELEASE_NAME}
 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
 PATH_SUFFIXES project build bin lib)

if(NOT QHULL_STATIC_LIBRARY_DEBUG)
	set(QHULL_STATIC_LIBRARY_DEBUG ${QHULL_STATIC_LIBRARY})
endif(NOT QHULL_STATIC_LIBRARY_DEBUG)


find_library(QHULL_CPP_LIBRARY 
	NAMES ${QHULL_CPP_RELEASE_NAME}
	 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
	 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
	 PATH_SUFFIXES project build bin lib)

 find_library(QHULL_CPP_LIBRARY_DEBUG 
	 NAMES ${QHULL_CPP_DEBUG_NAME} ${QHULL_CPP_RELEASE_NAME}
 HINTS "${QHULL_ROOT}" "$ENV{QHULL_ROOT}"
 PATHS "$ENV{PROGRAMFILES}/QHull" "$ENV{PROGRAMW6432}/QHull" 
 PATH_SUFFIXES project build bin lib)

if(NOT QHULL_CPP_LIBRARY_DEBUG)
	set(QHULL_CPP_LIBRARY_DEBUG ${QHULL_CPP_LIBRARY})
endif(NOT QHULL_CPP_LIBRARY_DEBUG)




set(QHULL_INCLUDE_DIRS ${QHULL_INCLUDE_DIR})
set(QHULL_LIBRARIES 
	optimized ${QHULL_LIBRARY}
	${QHULL_CPP_LIBRARY}
	${QHULL_P_LIBRARY}
	${QHULL_REENT_LIBRARY}
	${QHULL_STATIC_LIBRARY}
	debug ${QHULL_LIBRARY_DEBUG}
	${QHULL_CPP_LIBRARY_DEBUG}
	${QHULL_P_LIBRARY_DEBUG}
	${QHULL_REENT_LIBRARY_DEBUG}
	${QHULL_STATIC_LIBRARY_DEBUG}
	)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Qhull DEFAULT_MSG QHULL_LIBRARY QHULL_INCLUDE_DIR)

if(QHULL_FOUND)
  set(HAVE_QHULL ON)
  message(STATUS "QHULL found (include: ${QHULL_INCLUDE_DIRS}, lib: ${QHULL_LIBRARIES})")
endif(QHULL_FOUND)

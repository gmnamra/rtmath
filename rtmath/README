This is Ryan's rtmath library and corresponding applications.
rtmath is a set of radiative transfer-geard routines that are designed to ultimately solve the radiative transfer equation in the microwave spectrum. Furthermore, it contains C++ classes designed to read and manipulate ddscat data and to perform weighting based on particle distributions of shape, size and orientation. These weightings change the bulk scattering and absorption matrices for the DA solution. 

Additionally, this library provides many ancillary routines for fast matrix manipulation, command-line and config file processing and plotting. 


DEPENDENCIES
------------
rtmath depends on:
- Boost (version >= 1.46)
- CERN ROOT (recent version)
- C++11 compiler (gcc >= 4.4, etc.)
- cmake (>= 1.6.2)
- tcsh
- postgresql

Not all systems provide these dependencies. For CentOS 5.7, for example, everything but cmake must be compiled from scratch. Recent versions of Debian and Ubuntu no longer provide Boost in their repositories, so this must be compiled manually, along with all respective dependencies.

This software is designed to work well on Windows, and may be compiled with GCC, MSVC and Intel compilers. It should work, but is untested, on Mac OS X.

INSTALLATION
------------

- First, ensure that the dependencies are installed
  For Fedora, yum install environment-modules postgresql-devel libpqxx root-physics netcdf-devel tcsh screen gcc-c++ boost-devel subversion boost vim alpine
  Debian and Ubuntu currently no longer provide ROOT packages. These need to be built from source.
  Old CentOS versions (anything below version 6) provide GCC 4.1.x. This lacks C++11 support. A more recent compiler is necessary. GCC can be built for this platform 
  with some difficulty. LLVM is also an option. Also, the version of Boost provided is ancient. This requires a from-source build. Actually, most of the packages probably 
  need a source rebuild.
  For Windows, just install the packages and a compiler (Visual Studio 2010 or better is recommended), and the build works fine.
  Untested as yet on OS X, but it should build just fine.

- Procure the most recent version of the libraries through subversion
  svn co https://solar.met.fsu.edu/rtmath/rtmath
  * Branches may be found under https://solar.met.fsu.edu/svn/rtmath/branches
  * When upgrading between major versions, a fresh checkout is recommended.

- Load appropriate modules and build dependencies
  On Red Hat derivatives or on environment-modules-containing systems, load:
  1) gcc-4.6.3        3) netcdf           5) cmake
  2) root             4) boost-1.49       6) hdf5

  These packages are provided on many of the liu systems. Not all are necessary if the base system provides the package. 

- Invoke cmake to generate platform-specific build files
  It is recommended that the cmake build path be separate from the sources, as this keeps the sources pristine. This is essential on WIndows VS builds, as the build system 
  can overwrite the development .sln files.
  Ex: mkdir cmake-rtmath
      svn co https://solar.met.fsu.edu/svn/rtmath/branches/stable rtmath-stable
      cd cmake-rtmath
      cmake ../rtmath-stable -DCMAKE_INSTALL_PREFIX=/home/rhoneyag
      Will configure install path.
  Also, using ccmake or cmake-gui gives a good list of the options that may be set in the build.

Recommended cmake options:
 CMAKE_INSTALL_PREFIX             /opt/rtmath
 DATA_DIR_PREFIX                  /data/rhoneyag/rtmath
 ENV_MOD_DIR_PREFIX               /etc/modulefiles
 INSTALL_DATA                     OFF
 INSTALL_MODULES                  ON
 USE_IPP                          OFF
 USE_OPENMP                       OFF






- Execute build using build utility
  Ex: make all install
      make package
  Note: Installations in nonstandard directories require that the LD_LIBRARY_PATH and PATH environment variables be updated appropriately. On Red Hat-derivatives, 
      the environment-modules package is highly recommended. See documentation for further details.



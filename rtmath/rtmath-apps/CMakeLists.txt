# Build the apps
find_package(Boost COMPONENTS program_options 
	serialization iostreams filesystem system unit_test_framework regex REQUIRED)
include_directories(BEFORE SYSTEM ${Boost_INCLUDE_DIR})
find_package(Ryan_Debug REQUIRED)
find_package(Ryan_Serialization REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(EIGEN3_INCLUDE_DIR)
include_directories(${RYAN_DEBUG_INCLUDE_DIRS})
include_directories(${RYAN_SERIALIZATION_INCLUDE_DIRS})

option (BUILD_APPS_DEPEND_PCL
	"Build apps that depend on PCL"
	ON)

option (BUILD_APPS_CORE
	"Build the rtmath_core apps" ON)
option (BUILD_APPS_DDSCAT
	"Build applications that manipulate ddscat files" ON)
option (BUILD_APPS_MIE
	"Build the rtmath_mie apps" ON)
option (BUILD_APPS_ORIENTATION
	"Build orientation-dependent apps" ON)
option (BUILD_APPS_SHAPE
	"Build apps that manipulate shapes and shape statistics" ON)
option (BUILD_APPS_TMATRIX
	"Build the rtmath tmatrix apps" ON)

#add_subdirectory (absorb-slab)
#add_subdirectory (arm-index-files)
#add_subdirectory (atmosplot)
if (BUILD_APPS_CORE)
	add_subdirectory (combo)
	add_subdirectory (comborows)
	add_subdirectory (conv-units)
endif()
#add_subdirectory (da)
#add_subdirectory (db-catalog-ddscat)
#add_subdirectory (ddparse)
#add_subdirectory (ddscat)
if (BUILD_APPS_DDSCAT)
	add_subdirectory (ddscat-data)
	add_subdirectory (ddscat-ddpar)
	#add_subdirectory (ddscat-decimate)
endif()
if (BUILD_APPS_SHAPE)
	add_subdirectory (ddscat-generate-ellipsoid)
endif()
if (BUILD_APPS_DDSCAT)
	#add_subdirectory (ddscat-genparams)
	add_subdirectory (ddscat-output)
	add_subdirectory (ddscat-output-extract)
endif()
if (BUILD_APPS_ORIENTATION)
	add_subdirectory (ddscat-output-extract-orientations)
endif()
if (BUILD_APPS_DDSCAT)
	add_subdirectory (ddscat-postprocess)
	add_subdirectory (ddscat-regenerate-run)
	##add_subdirectory (ddscat-regenerate-shapes)
	add_subdirectory (ddscat-test)
endif()
if (BUILD_APPS_CORE)
	add_subdirectory (expand-shorthand)
	#add_subdirectory (garrett)
	add_subdirectory (getm)
endif()
if (BUILD_APPS_DDSCAT)
	add_subdirectory (liu-regenerate-runs)
endif()
if (BUILD_APPS_MIE)
	add_subdirectory (mie-onesphere)
	add_subdirectory (mie-slice)
endif()
if (BUILD_APPS_ORIENTATION)
	add_subdirectory (orientation-ensembles)
	add_subdirectory (orientation-output-table)
	add_subdirectory (orientation-weights)
	add_subdirectory (orientation-weights-1d)
	add_subdirectory (orientation-weights-3d)
	add_subdirectory (orientation-weights-3d-random)
	add_subdirectory (orientation-weights-ddscat)
endif()
#add_subdirectory (roottest)
if (BUILD_APPS_CORE)
	add_subdirectory (rpline)
	add_subdirectory (rtmath-version)
	##add_subdirectory (sector)
endif()
if (BUILD_APPS_SHAPE)
	add_subdirectory (shape)
	##add_subdirectory (shape-basicdata)
	#add_subdirectory (shape-combo)
	add_subdirectory (shape-extract)
	add_subdirectory (shape-hash)
	add_subdirectory (shape-hull)
	add_subdirectory (shape-rehash)
endif()
if (BUILD_APPS_DEPEND_PCL)
	##add_subdirectory (shape-hexplate)
	##add_subdirectory (shape-rectprism)
	#add_subdirectory (shape-rosette)

	add_subdirectory (shape-sector-snowflake)
endif()
##add_subdirectory (stats-ddscat-combined-plots)
if (BUILD_APPS_TMATRIX)
	##add_subdirectory (tmatrix-convert-from-ddscat)
	add_subdirectory (tmatrix-ddscat-extract)
	add_subdirectory (tmatrix-oneellip)
	add_subdirectory (tmatrix-optimize-with-ddscat)
	add_subdirectory (tmatrix-slice)
endif()
#add_subdirectory (transmittance)
#add_subdirectory (uuid)
if (BUILD_APPS_SHAPE)
	add_subdirectory (vtktest)
endif()

# Control option for creating qt apps
option ( MAKE_GUIS
	"Make Qt GUI programs?" OFF)

if (MAKE_GUIS)
	##	add_subdirectory (ddscat-genparams-qt)
	if (TMATRIX_FOUND)

#		add_subdirectory (tmatrix-mie-test)
#		add_subdirectory (mie)
	endif()
endif()

if (RYCURSES_FOUND)
	option ( MAKE_NCURSES
		"Make ncurses programs?" ON)
	if (MAKE_NCURSES)
		if (TMATRIX_FOUND)
#			add_subdirectory (mttest)
		endif()
	endif()
endif()



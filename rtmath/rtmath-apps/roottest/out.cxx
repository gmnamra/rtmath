//
// File generated by rootcint at Thu May 17 03:44:41 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME out
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "out.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ddOutputSingleTreeBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ddOutputSingleTreeBranch(void *p = 0);
   static void *newArray_ddOutputSingleTreeBranch(Long_t size, void *p);
   static void delete_ddOutputSingleTreeBranch(void *p);
   static void deleteArray_ddOutputSingleTreeBranch(void *p);
   static void destruct_ddOutputSingleTreeBranch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ddOutputSingleTreeBranch*)
   {
      ::ddOutputSingleTreeBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ddOutputSingleTreeBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ddOutputSingleTreeBranch", ::ddOutputSingleTreeBranch::Class_Version(), "./ddOutputSingleTrees.h", 10,
                  typeid(::ddOutputSingleTreeBranch), DefineBehavior(ptr, ptr),
                  &::ddOutputSingleTreeBranch::Dictionary, isa_proxy, 4,
                  sizeof(::ddOutputSingleTreeBranch) );
      instance.SetNew(&new_ddOutputSingleTreeBranch);
      instance.SetNewArray(&newArray_ddOutputSingleTreeBranch);
      instance.SetDelete(&delete_ddOutputSingleTreeBranch);
      instance.SetDeleteArray(&deleteArray_ddOutputSingleTreeBranch);
      instance.SetDestructor(&destruct_ddOutputSingleTreeBranch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ddOutputSingleTreeBranch*)
   {
      return GenerateInitInstanceLocal((::ddOutputSingleTreeBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ddOutputSingleTreeBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ddOutputSingleTreeBranch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ddOutputSingleTreeBranch::Class_Name()
{
   return "ddOutputSingleTreeBranch";
}

//______________________________________________________________________________
const char *ddOutputSingleTreeBranch::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddOutputSingleTreeBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ddOutputSingleTreeBranch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddOutputSingleTreeBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ddOutputSingleTreeBranch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddOutputSingleTreeBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ddOutputSingleTreeBranch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddOutputSingleTreeBranch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ddOutputSingleTreeBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class ddOutputSingleTreeBranch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ddOutputSingleTreeBranch::Class(),this);
   } else {
      R__b.WriteClassBuffer(ddOutputSingleTreeBranch::Class(),this);
   }
}

//______________________________________________________________________________
void ddOutputSingleTreeBranch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ddOutputSingleTreeBranch.
      typedef ::ddOutputSingleTreeBranch msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_freq", &_freq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_size[4000]", _size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_size_P", &_size_P);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ddOutputSingleTreeBranch(void *p) {
      return  p ? new(p) ::ddOutputSingleTreeBranch : new ::ddOutputSingleTreeBranch;
   }
   static void *newArray_ddOutputSingleTreeBranch(Long_t nElements, void *p) {
      return p ? new(p) ::ddOutputSingleTreeBranch[nElements] : new ::ddOutputSingleTreeBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_ddOutputSingleTreeBranch(void *p) {
      delete ((::ddOutputSingleTreeBranch*)p);
   }
   static void deleteArray_ddOutputSingleTreeBranch(void *p) {
      delete [] ((::ddOutputSingleTreeBranch*)p);
   }
   static void destruct_ddOutputSingleTreeBranch(void *p) {
      typedef ::ddOutputSingleTreeBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ddOutputSingleTreeBranch

/********************************************************
* out.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableout();

extern "C" void G__set_cpp_environmentout() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ddOutputSingleTrees.h");
  G__cpp_reset_tagtableout();
}
#include <new>
extern "C" int G__cpp_dllrevout() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ddOutputSingleTreeBranch */
static int G__out_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddOutputSingleTreeBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddOutputSingleTreeBranch[n];
     } else {
       p = new((void*) gvp) ddOutputSingleTreeBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddOutputSingleTreeBranch;
     } else {
       p = new((void*) gvp) ddOutputSingleTreeBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddOutputSingleTreeBranch*) G__getstructoffset())->freq((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddOutputSingleTreeBranch*) G__getstructoffset())->freq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddOutputSingleTreeBranch*) G__getstructoffset())->sz((Double_t) G__double(libp->para[0]), (size_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddOutputSingleTreeBranch*) G__getstructoffset())->sz((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddOutputSingleTreeBranch*) G__getstructoffset())->size_P((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddOutputSingleTreeBranch*) G__getstructoffset())->size_P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ddOutputSingleTreeBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddOutputSingleTreeBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ddOutputSingleTreeBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ddOutputSingleTreeBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddOutputSingleTreeBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddOutputSingleTreeBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddOutputSingleTreeBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddOutputSingleTreeBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__out_753_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddOutputSingleTreeBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__out_753_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ddOutputSingleTreeBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ddOutputSingleTreeBranch(*(ddOutputSingleTreeBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ddOutputSingleTreeBranch G__TddOutputSingleTreeBranch;
static int G__out_753_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ddOutputSingleTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ddOutputSingleTreeBranch*) (soff+(sizeof(ddOutputSingleTreeBranch)*i)))->~G__TddOutputSingleTreeBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ddOutputSingleTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ddOutputSingleTreeBranch*) (soff))->~G__TddOutputSingleTreeBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__out_753_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddOutputSingleTreeBranch* dest = (ddOutputSingleTreeBranch*) G__getstructoffset();
   *dest = *(ddOutputSingleTreeBranch*) libp->para[0].ref;
   const ddOutputSingleTreeBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ddOutputSingleTreeBranch */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncout {
 public:
  G__Sizep2memfuncout(): p(&G__Sizep2memfuncout::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncout::*p)();
};

size_t G__get_sizep2memfuncout()
{
  G__Sizep2memfuncout a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceout() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch))) {
     ddOutputSingleTreeBranch *G__Lderived;
     G__Lderived=(ddOutputSingleTreeBranch*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch),G__get_linked_tagnum(&G__outLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableout() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__outLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__outLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__outLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__outLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ddOutputSingleTreeBranch */
static void G__setup_memvarddOutputSingleTreeBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch));
   { ddOutputSingleTreeBranch *p; p=(ddOutputSingleTreeBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_freq=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_size[4000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_size_P=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__outLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarout() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncddOutputSingleTreeBranch(void) {
   /* ddOutputSingleTreeBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch));
   G__memfunc_setup("ddOutputSingleTreeBranch",2457,G__out_753_0_1, 105, G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("freq",430,G__out_753_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - nf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("freq",430,G__out_753_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sz",237,G__out_753_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - nf h - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sz",237,G__out_753_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_P",618,G__out_753_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - nf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size_P",618,G__out_753_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__out_753_0_8, 85, G__get_linked_tagnum(&G__outLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ddOutputSingleTreeBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__out_753_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddOutputSingleTreeBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__out_753_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ddOutputSingleTreeBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__out_753_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ddOutputSingleTreeBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__outLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__out_753_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__out_753_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddOutputSingleTreeBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__out_753_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddOutputSingleTreeBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__out_753_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddOutputSingleTreeBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__out_753_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddOutputSingleTreeBranch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ddOutputSingleTreeBranch", 2457, G__out_753_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch), -1, 0, 1, 1, 1, 0, "u 'ddOutputSingleTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ddOutputSingleTreeBranch", 2583, G__out_753_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__out_753_0_22, (int) ('u'), G__get_linked_tagnum(&G__outLN_ddOutputSingleTreeBranch), -1, 1, 1, 1, 1, 0, "u 'ddOutputSingleTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncout() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalout() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcout() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__outLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__outLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__outLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__outLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__outLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__outLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__outLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__outLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__outLN_ddOutputSingleTreeBranch = { "ddOutputSingleTreeBranch" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableout() {
  G__outLN_TClass.tagnum = -1 ;
  G__outLN_TBuffer.tagnum = -1 ;
  G__outLN_TMemberInspector.tagnum = -1 ;
  G__outLN_TObject.tagnum = -1 ;
  G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__outLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__outLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__outLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__outLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__outLN_ddOutputSingleTreeBranch.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableout() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__outLN_TClass);
   G__get_linked_tagnum_fwd(&G__outLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__outLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__outLN_TObject);
   G__get_linked_tagnum_fwd(&G__outLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__outLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__outLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__outLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__outLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__outLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__outLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__outLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__outLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__outLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__outLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__outLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__outLN_ddOutputSingleTreeBranch),sizeof(ddOutputSingleTreeBranch),-1,291072,(char*)NULL,G__setup_memvarddOutputSingleTreeBranch,G__setup_memfuncddOutputSingleTreeBranch);
}
extern "C" void G__cpp_setupout(void) {
  G__check_setup_version(30051515,"G__cpp_setupout()");
  G__set_cpp_environmentout();
  G__cpp_setup_tagtableout();

  G__cpp_setup_inheritanceout();

  G__cpp_setup_typetableout();

  G__cpp_setup_memvarout();

  G__cpp_setup_memfuncout();
  G__cpp_setup_globalout();
  G__cpp_setup_funcout();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncout();
  return;
}
class G__cpp_setup_initout {
  public:
    G__cpp_setup_initout() { G__add_setup_func("out",(G__incsetup)(&G__cpp_setupout)); G__call_setup_funcs(); }
   ~G__cpp_setup_initout() { G__remove_setup_func("out"); }
};
G__cpp_setup_initout G__cpp_setup_initializerout;

